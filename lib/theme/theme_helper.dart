import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            width: 4.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.blue900;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.blue900;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          color: appTheme.gray600,
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray30002,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray70001,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 14.fSize,
          fontFamily: 'HKGrotesk',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 10.fSize,
          fontFamily: 'ABeeZee',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 35.fSize,
          fontFamily: 'Raleway',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 30.fSize,
          fontFamily: 'Raleway',
          fontWeight: FontWeight.w500,
        ),
        headlineMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 28.fSize,
          fontFamily: 'Raleway',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.pink300,
          fontSize: 25.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.pink300,
          fontSize: 12.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 9.fSize,
          fontFamily: 'Raleway',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 20.fSize,
          fontFamily: 'Raleway',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 16.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.indigoA200,
          fontSize: 14.fSize,
          fontFamily: 'HKGrotesk',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF009BD9),
    primaryContainer: Color(0XFF092342),
    secondaryContainer: Color(0XEF6376B9),

    // Error colors
    errorContainer: Color(0XFFD82F32),
    onError: Color(0XFF7C7C7C),

    // On colors(text colors)
    onPrimary: Color(0XFF130F26),
    onPrimaryContainer: Color(0XFFBEBEBE),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amberA400 => Color(0XFFFFCC00);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue900 => Color(0XFF164194);
  Color get blueA100 => Color(0XFF90B8F9);

  // BlueGray
  Color get blueGray100 => Color(0XFFD1CFCF);
  Color get blueGray300 => Color(0XFF96A7AF);
  Color get blueGray400 => Color(0XFF8A8A8A);
  Color get blueGray800 => Color(0XFF334355);
  Color get blueGray900 => Color(0XFF303336);

  // Gray
  Color get gray100 => Color(0XFFF3F3F3);
  Color get gray10001 => Color(0XFFF3F6F8);
  Color get gray10002 => Color(0XFFF6F6F6);
  Color get gray10003 => Color(0XFFF2F3F2);
  Color get gray10004 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFF0F0F0);
  Color get gray300 => Color(0XFFE6E6E6);
  Color get gray30001 => Color(0XFFE2E2E2);
  Color get gray30002 => Color(0XFFE4E4E7);
  Color get gray30003 => Color(0XFFDEDEDE);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray40001 => Color(0XFFB1AFAF);
  Color get gray500 => Color(0XFFA3A3A3);
  Color get gray600 => Color(0XFF7F7F7F);
  Color get gray700 => Color(0XFF666666);
  Color get gray70001 => Color(0XFF555555);
  Color get gray900 => Color(0XFF171717);
  Color get gray90001 => Color(0XFF181725);
  Color get gray90002 => Color(0XFF1B153D);

  // Grayf
  Color get gray3003f => Color(0X3FE4E4E4);

  // Graya
  Color get gray9000a => Color(0X0A171439);

  // Green
  Color get greenA700 => Color(0XFF25D366);
  Color get greenA70001 => Color(0XFF20CB55);

  // Indigo
  Color get indigoA200 => Color(0XFF5468FF);

  // LightBlue
  Color get lightBlueA700 => Color(0XFF007AFF);

  // Orange
  Color get orange300 => Color(0XFFFFC542);
  Color get orangeA200 => Color(0XFFF6B23B);

  // Pink
  Color get pink300 => Color(0XFFCA5098);

  // Purple
  Color get purple800 => Color(0XFF742284);

  // Red
  Color get redA700 => Color(0XFFFF0000);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellowA200 => Color(0XFFFFFF00);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
