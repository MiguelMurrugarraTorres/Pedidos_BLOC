import 'bloc/pedidos_cliente_registrados_tab_container_bloc.dart';import 'models/pedidos_cliente_registrados_tab_container_model.dart';import 'package:flutter/material.dart';import 'package:pedidos/core/app_export.dart';import 'package:pedidos/presentation/pedidos_cliente_pendientes_page/pedidos_cliente_pendientes_page.dart';import 'package:pedidos/presentation/pedidos_cliente_registrados_page/pedidos_cliente_registrados_page.dart';import 'package:pedidos/presentation/pedidos_detalle_page/pedidos_detalle_page.dart';import 'package:pedidos/widgets/app_bar/appbar_title_image.dart';import 'package:pedidos/widgets/app_bar/custom_app_bar.dart';import 'package:pedidos/widgets/custom_bottom_bar.dart';import 'package:pedidos/widgets/custom_icon_button.dart';class PedidosClienteRegistradosTabContainerScreen extends StatefulWidget {const PedidosClienteRegistradosTabContainerScreen({Key? key}) : super(key: key);

@override PedidosClienteRegistradosTabContainerScreenState createState() =>  PedidosClienteRegistradosTabContainerScreenState();

static Widget builder(BuildContext context) { return BlocProvider<PedidosClienteRegistradosTabContainerBloc>(create: (context) => PedidosClienteRegistradosTabContainerBloc(PedidosClienteRegistradosTabContainerState(pedidosClienteRegistradosTabContainerModelObj: PedidosClienteRegistradosTabContainerModel()))..add(PedidosClienteRegistradosTabContainerInitialEvent()), child: PedidosClienteRegistradosTabContainerScreen()); } 
 }

// ignore_for_file: must_be_immutable
class PedidosClienteRegistradosTabContainerScreenState extends State<PedidosClienteRegistradosTabContainerScreen> with  TickerProviderStateMixin {late TabController tabviewController;

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override void initState() { super.initState(); tabviewController = TabController(length: 2, vsync: this); } 
@override Widget build(BuildContext context) { return BlocBuilder<PedidosClienteRegistradosTabContainerBloc, PedidosClienteRegistradosTabContainerState>(builder: (context, state) {return SafeArea(child: Scaffold(body: SizedBox(width: double.maxFinite, child: Column(children: [_buildAppBar(context), SizedBox(height: 694.v, child: TabBarView(controller: tabviewController, children: [PedidosClientePendientesPage.builder(context), PedidosClienteRegistradosPage.builder(context)]))])), bottomNavigationBar: Padding(padding: EdgeInsets.symmetric(horizontal: 7.h), child: _buildBottomBar(context))));}); } 
/// Section Widget
Widget _buildAppBar(BuildContext context) { return SizedBox(height: 190.v, width: double.maxFinite, child: Stack(alignment: Alignment.bottomCenter, children: [CustomAppBar(centerTitle: true, title: AppbarTitleImage(imagePath: ImageConstant.imgFrame121075520), styleType: Style.bgGradientnameprimarynamepink300opacity088), Align(alignment: Alignment.bottomCenter, child: Container(margin: EdgeInsets.symmetric(horizontal: 13.h), decoration: BoxDecoration(borderRadius: BorderRadiusStyle.customBorderTL15), child: Column(mainAxisSize: MainAxisSize.min, children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.symmetric(vertical: 3.v), child: CustomIconButton(height: 33.adaptSize, width: 33.adaptSize, decoration: IconButtonStyleHelper.outlineBlack, child: CustomImageView(imagePath: ImageConstant.imgFrame427318956))), CustomImageView(imagePath: ImageConstant.imgContrast, height: 22.v, width: 25.h, margin: EdgeInsets.symmetric(vertical: 8.v)), Padding(padding: EdgeInsets.only(top: 9.v, bottom: 10.v), child: Text("lbl_pedidos".tr, style: TextStyle(color: theme.colorScheme.primary, fontSize: 16.fSize, fontFamily: 'Roboto', fontWeight: FontWeight.w700))), Container(width: 254.h, margin: EdgeInsets.only(left: 10.h), decoration: AppDecoration.outlineBlack900.copyWith(borderRadius: BorderRadiusStyle.customBorderLR15), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Container(height: 33.v, width: 114.h, margin: EdgeInsets.only(bottom: 6.v), padding: EdgeInsets.only(left: 12.h, right: 11.h), decoration: AppDecoration.outlineBlack9001, child: CustomImageView(imagePath: ImageConstant.imgCardlist, height: 33.v, width: 30.h, alignment: Alignment.centerRight)), CustomImageView(imagePath: ImageConstant.imgThumbsUp, height: 22.v, width: 25.h, margin: EdgeInsets.only(left: 21.h, top: 7.v, bottom: 9.v)), Spacer(), GestureDetector(onTap: () {onTapFrame(context);}, child: Container(height: 32.v, width: 39.h, margin: EdgeInsets.only(right: 21.h, bottom: 6.v), child: Stack(alignment: Alignment.topRight, children: [CustomIconButton(height: 30.adaptSize, width: 30.adaptSize, padding: EdgeInsets.all(4.h), decoration: IconButtonStyleHelper.fillPrimary, alignment: Alignment.bottomLeft, child: CustomImageView(imagePath: ImageConstant.imgCart)), Align(alignment: Alignment.topRight, child: Container(width: 15.adaptSize, padding: EdgeInsets.symmetric(horizontal: 5.h, vertical: 1.v), decoration: AppDecoration.fillPink.copyWith(borderRadius: BorderRadiusStyle.roundedBorder7), child: Text("lbl_2".tr, style: TextStyle(color: appTheme.whiteA700, fontSize: 9.fSize, fontFamily: 'Raleway', fontWeight: FontWeight.w600))))])))]))]), SizedBox(height: 16.v), Container(height: 50.v, width: 400.h, decoration: BoxDecoration(color: appTheme.whiteA700, borderRadius: BorderRadius.vertical(top: Radius.circular(15.h))), child: TabBar(controller: tabviewController, labelPadding: EdgeInsets.zero, labelColor: theme.colorScheme.onPrimaryContainer, labelStyle: TextStyle(fontSize: 18.fSize, fontFamily: 'Raleway', fontWeight: FontWeight.w500), unselectedLabelColor: theme.colorScheme.primary, unselectedLabelStyle: TextStyle(fontSize: 18.fSize, fontFamily: 'Raleway', fontWeight: FontWeight.w700), indicator: BoxDecoration(border: Border(bottom: BorderSide(color: theme.colorScheme.onPrimaryContainer, width: 3.h))), tabs: [Tab(child: Text("lbl_registrados_2".tr)), Tab(child: Text("lbl_pendientes_3".tr))]))])))])); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.pedidosDetallePage; case BottomBarEnum.Rutas: return "/"; case BottomBarEnum.Courses: return "/"; case BottomBarEnum.Cobrar: return "/"; case BottomBarEnum.Clientes: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.pedidosDetallePage: return PedidosDetallePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the carritoVistaPrincipalScreen when the action is triggered.
onTapFrame(BuildContext context) { NavigatorService.pushNamed(AppRoutes.carritoVistaPrincipalScreen, ); } 
 }
