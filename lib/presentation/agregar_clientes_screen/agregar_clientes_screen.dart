import 'bloc/agregar_clientes_bloc.dart';import 'models/agregar_clientes_model.dart';import 'package:dotted_border/dotted_border.dart';import 'package:flutter/material.dart';import 'package:pedidos/core/app_export.dart';import 'package:pedidos/core/utils/validation_functions.dart';import 'package:pedidos/presentation/pedidos_detalle_page/pedidos_detalle_page.dart';import 'package:pedidos/widgets/app_bar/appbar_title_image.dart';import 'package:pedidos/widgets/app_bar/custom_app_bar.dart';import 'package:pedidos/widgets/custom_bottom_bar.dart';import 'package:pedidos/widgets/custom_drop_down.dart';import 'package:pedidos/widgets/custom_icon_button.dart';import 'package:pedidos/widgets/custom_text_form_field.dart';
// ignore_for_file: must_be_immutable
class AgregarClientesScreen extends StatelessWidget {AgregarClientesScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<AgregarClientesBloc>(create: (context) => AgregarClientesBloc(AgregarClientesState(agregarClientesModelObj: AgregarClientesModel()))..add(AgregarClientesInitialEvent()), child: AgregarClientesScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: SizeUtils.width, child: SingleChildScrollView(padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom), child: Form(key: _formKey, child: SizedBox(width: double.maxFinite, child: Column(children: [_buildAppBar(context), Container(padding: EdgeInsets.only(left: 33.h, right: 33.h, bottom: 1.v), decoration: AppDecoration.outlineGray10001, child: Column(children: [SizedBox(height: 14.v), DottedBorder(color: appTheme.gray700, padding: EdgeInsets.only(left: 1.h, top: 1.v, right: 1.h, bottom: 1.v), strokeWidth: 1.h, dashPattern: [4, 4], child: Container(padding: EdgeInsets.symmetric(vertical: 12.v), decoration: AppDecoration.outlineGray700, child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 2.h), child: Text("lbl_origen".tr, style: TextStyle(color: theme.colorScheme.primary, fontSize: 15.fSize, fontFamily: 'Inter', fontWeight: FontWeight.w700))), SizedBox(height: 8.v), Padding(padding: EdgeInsets.only(left: 2.h), child: BlocSelector<AgregarClientesBloc, AgregarClientesState, AgregarClientesModel?>(selector: (state) => state.agregarClientesModelObj, builder: (context, agregarClientesModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 22.v, 24.h, 22.v), child: CustomImageView(imagePath: ImageConstant.imgArrowdownBlack900, height: 10.v, width: 20.h)), hintText: "lbl_nacional".tr, items: agregarClientesModelObj?.dropdownItemList ?? [], onChanged: (value) {context.read<AgregarClientesBloc>().add(ChangeDropDownEvent(value: value));});})), SizedBox(height: 14.v), Padding(padding: EdgeInsets.only(left: 2.h), child: Text("lbl_pa_s".tr, style: TextStyle(color: theme.colorScheme.primary, fontSize: 15.fSize, fontFamily: 'Inter', fontWeight: FontWeight.w700))), SizedBox(height: 10.v), Padding(padding: EdgeInsets.only(left: 2.h), child: BlocSelector<AgregarClientesBloc, AgregarClientesState, AgregarClientesModel?>(selector: (state) => state.agregarClientesModelObj, builder: (context, agregarClientesModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 21.v, 26.h, 21.v), child: CustomImageView(imagePath: ImageConstant.imgArrowdownBlack900, height: 10.v, width: 20.h)), hintText: "lbl_per".tr, items: agregarClientesModelObj?.dropdownItemList1 ?? [], onChanged: (value) {context.read<AgregarClientesBloc>().add(ChangeDropDown1Event(value: value));});})), SizedBox(height: 14.v), Padding(padding: EdgeInsets.only(left: 2.h), child: Text("msg_documento_de_identidad".tr, style: TextStyle(color: theme.colorScheme.primary, fontSize: 15.fSize, fontFamily: 'Inter', fontWeight: FontWeight.w700))), SizedBox(height: 10.v), Padding(padding: EdgeInsets.only(left: 2.h), child: BlocSelector<AgregarClientesBloc, AgregarClientesState, AgregarClientesModel?>(selector: (state) => state.agregarClientesModelObj, builder: (context, agregarClientesModelObj) {return CustomDropDown(icon: Container(margin: EdgeInsets.fromLTRB(30.h, 21.v, 25.h, 21.v), child: CustomImageView(imagePath: ImageConstant.imgArrowdownBlack900, height: 10.v, width: 20.h)), hintText: "lbl_ruc".tr, items: agregarClientesModelObj?.dropdownItemList2 ?? [], onChanged: (value) {context.read<AgregarClientesBloc>().add(ChangeDropDown2Event(value: value));});})), SizedBox(height: 15.v), Padding(padding: EdgeInsets.only(left: 2.h), child: Text("lbl_nro_documento".tr, style: TextStyle(color: theme.colorScheme.primary, fontSize: 15.fSize, fontFamily: 'Inter', fontWeight: FontWeight.w700))), SizedBox(height: 9.v), _buildFormularioAgregar(context), SizedBox(height: 9.v)])))]))]))))), bottomNavigationBar: Padding(padding: EdgeInsets.symmetric(horizontal: 7.h), child: _buildBottomBar(context)))); } 
/// Section Widget
Widget _buildAppBar(BuildContext context) { return SizedBox(height: 118.v, width: double.maxFinite, child: Stack(alignment: Alignment.bottomCenter, children: [CustomAppBar(centerTitle: true, title: AppbarTitleImage(imagePath: ImageConstant.imgFrame121075520), styleType: Style.bgGradientnameprimarynamepink300opacity088), Align(alignment: Alignment.bottomCenter, child: Container(width: double.maxFinite, margin: EdgeInsets.only(top: 65.v), decoration: BoxDecoration(borderRadius: BorderRadiusStyle.customBorderTL15), child: Row(mainAxisAlignment: MainAxisAlignment.end, crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(top: 20.v), child: CustomIconButton(height: 33.adaptSize, width: 33.adaptSize, padding: EdgeInsets.all(5.h), decoration: IconButtonStyleHelper.fillGray, onTap: () {onTapBtnArrowRight(context);}, child: CustomImageView(imagePath: ImageConstant.imgArrowRightPrimary))), CustomImageView(imagePath: ImageConstant.imgPeoplefillPrimary, height: 23.adaptSize, width: 23.adaptSize, margin: EdgeInsets.only(left: 10.h, top: 25.v, bottom: 5.v), onTap: () {onTapImgPeopleFill(context);}), GestureDetector(onTap: () {onTapTxtClientes(context);}, child: Padding(padding: EdgeInsets.only(left: 10.h, top: 26.v, bottom: 7.v), child: Text("lbl_clientes".tr, style: TextStyle(color: theme.colorScheme.primary, fontSize: 16.fSize, fontFamily: 'Roboto', fontWeight: FontWeight.w700)))), Container(margin: EdgeInsets.only(left: 10.h, top: 20.v), padding: EdgeInsets.symmetric(horizontal: 5.h, vertical: 6.v), decoration: AppDecoration.outlineBlack900.copyWith(borderRadius: BorderRadiusStyle.customBorderLR15), child: Container(decoration: BoxDecoration(borderRadius: BorderRadiusStyle.customBorderLR15), child: Row(mainAxisSize: MainAxisSize.min, children: [CustomImageView(imagePath: ImageConstant.imgArrowRightPrimary16x10, height: 16.v, width: 10.h, margin: EdgeInsets.only(bottom: 2.v)), Padding(padding: EdgeInsets.only(left: 18.h), child: Text("lbl_agregar_cliente2".tr, style: TextStyle(color: theme.colorScheme.primary, fontSize: 16.fSize, fontFamily: 'Roboto', fontWeight: FontWeight.w700)))])))])))])); } 
/// Section Widget
Widget _buildFormularioAgregar(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 2.h), child: Row(children: [Expanded(child: BlocSelector<AgregarClientesBloc, AgregarClientesState, TextEditingController?>(selector: (state) => state.valueController, builder: (context, valueController) {return CustomTextFormField(controller: valueController, hintText: "lbl_12345678911".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.phone, validator: (value) {if (!isValidPhone(value)) {return "err_msg_please_enter_valid_phone_number".tr;} return null;});})), Padding(padding: EdgeInsets.only(left: 12.h), child: CustomIconButton(height: 54.v, width: 56.h, padding: EdgeInsets.all(12.h), decoration: IconButtonStyleHelper.fillPrimaryTL10, onTap: () {onTapBtnSearch(context);}, child: CustomImageView(imagePath: ImageConstant.imgSearchWhiteA700)))])); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.pedidosDetallePage; case BottomBarEnum.Rutas: return "/"; case BottomBarEnum.Courses: return "/"; case BottomBarEnum.Cobrar: return "/"; case BottomBarEnum.Clientes: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.pedidosDetallePage: return PedidosDetallePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the registrarClientesScreen when the action is triggered.
onTapBtnArrowRight(BuildContext context) { NavigatorService.pushNamed(AppRoutes.registrarClientesScreen, ); } 
/// Navigates to the registrarClientesScreen when the action is triggered.
onTapImgPeopleFill(BuildContext context) { NavigatorService.pushNamed(AppRoutes.registrarClientesScreen, ); } 
/// Navigates to the registrarClientesScreen when the action is triggered.
onTapTxtClientes(BuildContext context) { NavigatorService.pushNamed(AppRoutes.registrarClientesScreen, ); } 
/// Navigates to the buscadorDeClienteScreen when the action is triggered.
onTapBtnSearch(BuildContext context) { NavigatorService.pushNamed(AppRoutes.buscadorDeClienteScreen, ); } 
 }
